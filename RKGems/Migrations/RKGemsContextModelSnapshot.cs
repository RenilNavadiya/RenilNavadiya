// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RKGems.Data;

namespace RKGems.Migrations
{
    [DbContext(typeof(RKGemsContext))]
    partial class RKGemsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RKGems.Models.FourP", b =>
                {
                    b.Property<int>("FourPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("FourPQuantity")
                        .HasColumnType("float");

                    b.Property<double>("FourPWeight")
                        .HasColumnType("float");

                    b.Property<int>("IdOfResult")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeightOfResultResultId")
                        .HasColumnType("int");

                    b.HasKey("FourPId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WeightOfResultResultId");

                    b.ToTable("FourPs");

                    b.HasData(
                        new
                        {
                            FourPId = 1,
                            FourPQuantity = 50.0,
                            FourPWeight = 70.0,
                            IdOfResult = 1,
                            PurchaseId = 1
                        },
                        new
                        {
                            FourPId = 2,
                            FourPQuantity = 60.0,
                            FourPWeight = 60.0,
                            IdOfResult = 2,
                            PurchaseId = 2
                        },
                        new
                        {
                            FourPId = 3,
                            FourPQuantity = 70.0,
                            FourPWeight = 50.0,
                            IdOfResult = 3,
                            PurchaseId = 3
                        });
                });

            modelBuilder.Entity("RKGems.Models.Polish", b =>
                {
                    b.Property<int>("PolishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOfResult")
                        .HasColumnType("int");

                    b.Property<double>("PolishQuantity")
                        .HasColumnType("float");

                    b.Property<double>("PolishWeight")
                        .HasColumnType("float");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("WeightOfResultResultId")
                        .HasColumnType("int");

                    b.HasKey("PolishId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WeightOfResultResultId");

                    b.ToTable("Polishes");

                    b.HasData(
                        new
                        {
                            PolishId = 1,
                            IdOfResult = 1,
                            PolishQuantity = 50.0,
                            PolishWeight = 60.0,
                            PurchaseId = 1
                        },
                        new
                        {
                            PolishId = 2,
                            IdOfResult = 2,
                            PolishQuantity = 60.0,
                            PolishWeight = 50.0,
                            PurchaseId = 2
                        },
                        new
                        {
                            PolishId = 3,
                            IdOfResult = 3,
                            PolishQuantity = 70.0,
                            PolishWeight = 40.0,
                            PurchaseId = 3
                        });
                });

            modelBuilder.Entity("RKGems.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("PurchaseWeight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Purchase");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DueDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemNumber = "A1",
                            PartyName = "Renil",
                            Price = 1000.0,
                            PurchaseWeight = 100.0
                        },
                        new
                        {
                            Id = 2,
                            DueDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemNumber = "A2",
                            PartyName = "Keyur",
                            Price = 2000.0,
                            PurchaseWeight = 150.0
                        },
                        new
                        {
                            Id = 3,
                            DueDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemNumber = "A3",
                            PartyName = "Piyush",
                            Price = 3000.0,
                            PurchaseWeight = 200.0
                        });
                });

            modelBuilder.Entity("RKGems.Models.Result", b =>
                {
                    b.Property<int>("ResultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<double>("ResultThan")
                        .HasColumnType("float");

                    b.Property<double>("ResultWeight")
                        .HasColumnType("float");

                    b.HasKey("ResultId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            ResultId = 1,
                            PurchaseId = 1,
                            ResultThan = 50.0,
                            ResultWeight = 75.0
                        },
                        new
                        {
                            ResultId = 2,
                            PurchaseId = 2,
                            ResultThan = 60.0,
                            ResultWeight = 65.0
                        },
                        new
                        {
                            ResultId = 3,
                            PurchaseId = 3,
                            ResultThan = 70.0,
                            ResultWeight = 55.0
                        });
                });

            modelBuilder.Entity("RKGems.Models.Russian", b =>
                {
                    b.Property<int>("RussianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdOfFourP")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<double>("RussianQuantity")
                        .HasColumnType("float");

                    b.Property<double>("RussianWeight")
                        .HasColumnType("float");

                    b.Property<int?>("WeightOfFourPFourPId")
                        .HasColumnType("int");

                    b.HasKey("RussianId");

                    b.HasIndex("PurchaseId");

                    b.HasIndex("WeightOfFourPFourPId");

                    b.ToTable("Russians");

                    b.HasData(
                        new
                        {
                            RussianId = 1,
                            IdOfFourP = 1,
                            PurchaseId = 1,
                            RussianQuantity = 50.0,
                            RussianWeight = 65.0
                        },
                        new
                        {
                            RussianId = 2,
                            IdOfFourP = 2,
                            PurchaseId = 2,
                            RussianQuantity = 60.0,
                            RussianWeight = 55.0
                        },
                        new
                        {
                            RussianId = 3,
                            IdOfFourP = 3,
                            PurchaseId = 3,
                            RussianQuantity = 70.0,
                            RussianWeight = 45.0
                        });
                });

            modelBuilder.Entity("RKGems.Models.FourP", b =>
                {
                    b.HasOne("RKGems.Models.Purchase", "PurchaseItemNumber")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RKGems.Models.Result", "WeightOfResult")
                        .WithMany()
                        .HasForeignKey("WeightOfResultResultId");

                    b.Navigation("PurchaseItemNumber");

                    b.Navigation("WeightOfResult");
                });

            modelBuilder.Entity("RKGems.Models.Polish", b =>
                {
                    b.HasOne("RKGems.Models.Purchase", "PolishItemNumber")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RKGems.Models.Result", "WeightOfResult")
                        .WithMany()
                        .HasForeignKey("WeightOfResultResultId");

                    b.Navigation("PolishItemNumber");

                    b.Navigation("WeightOfResult");
                });

            modelBuilder.Entity("RKGems.Models.Result", b =>
                {
                    b.HasOne("RKGems.Models.Purchase", "PurchaseItemNumber")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseItemNumber");
                });

            modelBuilder.Entity("RKGems.Models.Russian", b =>
                {
                    b.HasOne("RKGems.Models.Purchase", "PurchaseItemNumber")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RKGems.Models.FourP", "WeightOfFourP")
                        .WithMany()
                        .HasForeignKey("WeightOfFourPFourPId");

                    b.Navigation("PurchaseItemNumber");

                    b.Navigation("WeightOfFourP");
                });
#pragma warning restore 612, 618
        }
    }
}
